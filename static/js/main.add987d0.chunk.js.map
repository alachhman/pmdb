{"version":3,"sources":["pairsList.js","pair.js","App.js","serviceWorker.js","index.js"],"names":["units","name","pkmn","UnitList","UnitDataMapping","React","Component","props","listItems","map","unit","style","marginBottom","marginTop","size","outline","pill","float","href","replace","UnitDisplay","pkmnList","type","weakness","rarity","stats","moves","pow","acc","cost","effect","passives","desc","sync","Info","forEach","entry","document","URL","toString","split","PkmnLevelInfo","ownedPkmn","mon","toUpperCase","push","returnValues","md","StatBlock","InfoBlock","MoveBlock","className","listStyleType","Table","TableHeader","TableCell","scope","border","TableBody","TableRow","Text","DataTable","columns","property","header","primary","render","datum","Box","pad","vertical","Meter","values","value","percent","stat","color","round","thickness","data","count","moveDatums","move","Tab","title","Tabs","App","toggleDropdown","bind","toggleNavbar","state","dropdownOpen","collapseOpen","this","setState","basename","theme","expand","onClick","open","navbar","toggle","nav","caret","disabled","path","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.add987d0.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Container,\n    Card,\n    CardHeader,\n    Button\n} from \"shards-react\";\n\nconst units = [\n    {\n        name: \"Player\",\n        pkmn: [\n            \"pikachu\",\n            \"torchic\"\n        ]\n    },\n    {\n        name: \"Rosa\",\n        pkmn: [\n            \"snivy\",\n            \"servine\",\n            \"serperior\"\n        ]\n    },\n];\nexport default class UnitList extends React.Component {\n    render() {\n        return (\n            <Container>\n                <h3> Masters | Sync Pairs</h3>\n                <UnitDataMapping units={units}/>\n            </Container>\n        )\n    }\n}\n\nfunction UnitDataMapping(props) {\n    const units = props.units;\n    const listItems = units.map((unit) => {\n            return (\n                UnitDisplay(unit)\n            )\n        }\n    );\n    return (\n        <div>{listItems}</div>\n    )\n}\n\nfunction UnitDisplay(unit) {\n    return (\n        <div>\n            <Card style={{marginBottom: \"8px\", marginTop: \"8px\"}}>\n                <CardHeader>\n                    <strong>\n                        {unit.name}\n                        <Button size={\"sm\"} outline pill style={{float: \"right\"}}\n                                href={\"#/masters/pair/\" + unit.name.replace(\" \", \"_\")}>+</Button>\n                    </strong>\n                </CardHeader>\n            </Card>\n        </div>\n    );\n}\n","import React from 'react';\nimport {Container, CardHeader, Card, CardBody, Row, Col} from \"shards-react\";\nimport {Box, DataTable, Meter, Tab, Table, TableBody, TableCell, TableHeader, TableRow, Tabs, Text} from \"grommet/es6\";\n\nconst units = [\n    {\n        name: \"Player\",\n        pkmn: [\n            \"pikachu\",\n            \"torchic\"\n        ]\n    },\n    {\n        name: \"Rosa\",\n        pkmn: [\n            \"snivy\"\n        ]\n    },\n];\n\nconst pkmnList = [\n    {\n        name: \"pikachu\",\n        type: \"thunder / fire\",\n        weakness: \"ground\",\n        rarity: 3,\n        stats: [80, 150, 30, 20, 100, 90],\n        moves: [\n            {\n                name: \"move1 this is random text that should break the line limit\",\n                pow: 40,\n                acc: 30,\n                type: \"status\",\n                cost: 2,\n                effect: \"lorem ipsum\"\n            },\n            {name: \"move2\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move3\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move4\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n        ],\n        passives: [\n            {\n                name: \"passive1\",\n                desc: \"passive 1 desc\"\n            },\n            {\n                name: \"passive2\",\n                desc: \"passive 2 desc\"\n            }\n        ],\n        sync: {\n            name: \"syncmove\",\n            pow: 200,\n            type: \"type\",\n            effect: \"lorem ipsum sync description goes here\"\n        }\n    },\n    {\n        name: \"torchic\",\n        type: \"thunder\",\n        weakness: \"ground\",\n        rarity: 3,\n        stats: [60, 50, 180, 10, 30, 110],\n        moves: [\n            {name: \"move1\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move2\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move3\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move4\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n        ],\n        passives: [\n            {\n                name: \"passive1\",\n                desc: \"passive 1 desc\"\n            },\n            {\n                name: \"passive2\",\n                desc: \"passive 2 desc\"\n            }\n        ],\n        sync: {\n            name: \"syncmove\",\n            pow: 200,\n            type: \"type\",\n            effect: \"lorem ipsum\"\n        }\n    },\n    {\n        name: \"snivy\",\n        type: \"thunder\",\n        weakness: \"ground\",\n        rarity: 3,\n        stats: [40, 50, 140, 60, 20, 80],\n        moves: [\n            {name: \"move1\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move2\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move3\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n            {name: \"move4\", pow: 40, acc: 30, type: \"status\", cost: 2, effect: \"lorem ipsum\"},\n        ],\n        passives: [\n            {\n                name: \"passive1\",\n                desc: \"passive 1 desc\"\n            },\n            {\n                name: \"passive2\",\n                desc: \"passive 2 desc\"\n            }\n        ],\n        sync: {\n            name: \"syncmove\",\n            pow: 200,\n            type: \"type\",\n            effect: \"lorem ipsum\"\n        }\n    }\n];\n\nexport default function Info() {\n    let unit = \"\";\n    let ownedPkmn = [];\n    units.forEach((entry) => {\n        if (entry.name === document.URL.toString().split(\"/\")[6]) {\n            unit = entry;\n        }\n    });\n    return (\n        <Container>\n            <Col>\n                <h2>{unit.name}</h2>\n                <PkmnLevelInfo pkmn={unit.pkmn}/>\n            </Col>\n        </Container>\n    )\n}\n\nfunction PkmnLevelInfo(props) {\n    const pkmn = props.pkmn;\n    const ownedPkmn = [];\n    pkmn.forEach(function (entry) {\n        for (const mon of pkmnList) {\n            if (entry.toUpperCase() === mon.name.toUpperCase()) {\n                ownedPkmn.push(mon);\n            }\n        }\n    });\n    const returnValues = ownedPkmn.map((pkmn) => {\n        return (\n            <div>\n                <Card style={{marginBottom: \"8px\", marginTop: \"8px\"}}>\n                    <CardHeader><strong>\n                        <h4>{pkmn.name}</h4>\n                    </strong></CardHeader>\n                    <CardBody>\n                        <Row>\n                            <Col md>\n                                <StatBlock pkmn={pkmn}/>\n                            </Col>\n                            <Col md>\n                                <InfoBlock pkmn={pkmn}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <MoveBlock pkmn={pkmn}/>\n                            </Col>\n                        </Row>\n                    </CardBody>\n                </Card>\n                <br/>\n            </div>\n        )\n    });\n    return (\n        <div className={\"pokemonList\"} style={{listStyleType: \"none\"}}>{returnValues}</div>\n    )\n}\n\nfunction InfoBlock(props) {\n    const pkmn = props.pkmn;\n    return (\n        <div>\n            <Container className={\"InfoTable\"}>\n                <Table>\n                    <TableHeader>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Type\n                        </TableCell>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Weakness\n                        </TableCell>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Rarity\n                        </TableCell>\n                    </TableHeader>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                {pkmn.type}\n                            </TableCell>\n                            <TableCell>\n                                {pkmn.weakness}\n                            </TableCell>\n                            <TableCell>\n                                {pkmn.rarity}\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Container>\n            <Container className={\"SyncTable\"}>\n                <Table>\n                    <TableHeader>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Sync\n                        </TableCell>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Type\n                        </TableCell>\n                        <TableCell scope=\"col\" border=\"bottom\">\n                            Power\n                        </TableCell>\n                    </TableHeader>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>\n                                {pkmn.sync.name}\n                            </TableCell>\n                            <TableCell>\n                                {pkmn.sync.type}\n                            </TableCell>\n                            <TableCell>\n                                {pkmn.sync.pow}\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n                <Text>\n                    <blockquote>\n                        {pkmn.sync.effect}\n                    </blockquote>\n                </Text>\n            </Container>\n        </div>\n    )\n}\n\nfunction StatBlock(props) {\n    const pkmn = props.pkmn;\n    return (\n        <Container className={\"StatsTable\"}>\n            <DataTable\n                columns={[\n                    {\n                        property: 'name',\n                        header: <Text>Stats</Text>,\n                        primary: true,\n                    },\n                    {\n                        property: 'value'\n                    },\n                    {\n                        property: 'percent',\n                        header: '',\n                        render: datum => (\n                            <Box pad={{vertical: 'xsmall'}}>\n                                <Meter\n                                    values={[{\n                                        value: datum.percent.stat,\n                                        color: datum.percent.color\n                                    }]}\n                                    round={true}\n                                    thickness=\"small\"\n                                    size=\"small\"\n                                />\n                            </Box>\n                        ),\n                    },\n                ]}\n                data={[\n                    {\n                        name: 'HP',\n                        value: pkmn.stats[0],\n                        percent: {\n                            stat: pkmn.stats[0] / 2,\n                            color: (pkmn.stats[0] >= 150) ? \"status-ok\" : ((pkmn.stats[0] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                    {\n                        name: 'ATK',\n                        value: pkmn.stats[1],\n                        percent: {\n                            stat: pkmn.stats[1] / 2,\n                            color: (pkmn.stats[1] >= 150) ? \"status-ok\" : ((pkmn.stats[1] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                    {\n                        name: 'DEF',\n                        value: pkmn.stats[2],\n                        percent: {\n                            stat: pkmn.stats[2] / 2,\n                            color: (pkmn.stats[2] >= 150) ? \"status-ok\" : ((pkmn.stats[2] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                    {\n                        name: 'SPATK',\n                        value: pkmn.stats[3],\n                        percent: {\n                            stat: pkmn.stats[3] / 2,\n                            color: (pkmn.stats[3] >= 150) ? \"status-ok\" : ((pkmn.stats[3] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                    {\n                        name: 'SPDEF',\n                        value: pkmn.stats[4],\n                        percent: {\n                            stat: pkmn.stats[4] / 2,\n                            color: (pkmn.stats[4] >= 150) ? \"status-ok\" : ((pkmn.stats[4] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                    {\n                        name: 'SPD',\n                        value: pkmn.stats[5],\n                        percent: {\n                            stat: pkmn.stats[5] / 2,\n                            color: (pkmn.stats[5] >= 150) ? \"status-ok\" : ((pkmn.stats[5] <= 45) ? \"status-critical\" : \"status-warning\")\n                        }\n                    },\n                ]}\n            />\n        </Container>\n    )\n}\n\nfunction MoveBlock(props) {\n    const moves = props.pkmn.moves;\n    let count = 0;\n    const moveDatums = moves.map((move) => {\n        count++;\n        return (\n            <Tab title={\"M\" + count}>\n                <Container className={\"MovesTable\"}>\n                    <div style={{marginTop: \"12px\", marginBottom: \"8px\"}}>\n                        <Text>\n                            <strong>{move.name}:</strong>\n                        </Text>\n                    </div>\n                    <Table>\n                        <TableHeader>\n                            <TableRow>\n                                <TableCell>POW</TableCell>\n                                <TableCell>ACC</TableCell>\n                                <TableCell>Type</TableCell>\n                                <TableCell>Uses/Cost</TableCell>\n                            </TableRow>\n                        </TableHeader>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>{move.pow}</TableCell>\n                                <TableCell>{move.acc}</TableCell>\n                                <TableCell>{move.type}</TableCell>\n                                <TableCell>{move.cost}</TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                    <div style={{marginBottom: \"8px\"}}>\n                        <Text>\n                            <strong>Description: </strong>{move.effect}\n                        </Text>\n                    </div>\n\n                </Container>\n            </Tab>\n        )\n    });\n    return (\n        <Tabs>\n            {moveDatums}\n        </Tabs>\n    )\n}\n","import React from 'react';\nimport {\n    Alert,\n    Collapse,\n    Dropdown, DropdownItem, DropdownMenu,\n    DropdownToggle,\n    Nav, Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    NavItem,\n    NavLink\n} from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport \"./App.css\";\nimport UnitList from \"./pairsList\";\nimport {\n    HashRouter,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Info from \"./pair\";\n\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n\n        this.state = {\n            dropdownOpen: false,\n            collapseOpen: false,\n        };\n    }\n\n    toggleDropdown() {\n        this.setState({\n            ...this.state,\n            ...{\n                dropdownOpen: !this.state.dropdownOpen\n            }\n        });\n    }\n\n    toggleNavbar() {\n        this.setState({\n            ...this.state,\n            ...{\n                collapseOpen: !this.state.collapseOpen\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <HashRouter basename={'/'}>\n                    <Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\n                        <NavbarBrand href=\"/\">Home</NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNavbar}/>\n                        <Collapse open={this.state.collapseOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <Dropdown\n                                        open={this.state.dropdownOpen}\n                                        toggle={this.toggleDropdown}\n                                    >\n                                        <DropdownToggle nav caret>\n                                            Pokemon Masters\n                                        </DropdownToggle>\n                                        <DropdownMenu>\n                                            <DropdownItem href={\"#/masters/pairs\"}>Sync Pairs</DropdownItem>\n                                            <DropdownItem href={\"#/masters/gear\"}>Gear</DropdownItem>\n                                            <DropdownItem href={\"#/masters/tier-list\"}>Tier List</DropdownItem>\n                                        </DropdownMenu>\n                                    </Dropdown>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink href=\"/\" disabled>\n                                        Dragalia Lost\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </Navbar>\n                    <Alert>\n                        This is where the discord invite for the bot and masters server will\n                        live. <strong>Based</strong>  &rarr;\n                    </Alert>\n                    <Switch>\n                        <Route path=\"/masters/pair/\">\n                            <Info/>\n                        </Route>\n                        <Route path=\"/masters/pairs\">\n                            <UnitList/>\n                        </Route>\n                        <Route path=\"/masters/gear\">\n                            <h3> Masters | Gear</h3>\n                        </Route>\n                        <Route path=\"/masters/tier-list\">\n                            <h3> Masters | Tier List</h3>\n                        </Route>\n                        <Route path=\"/\">\n                            <h3> HOME </h3>\n                        </Route>\n                    </Switch>\n                </HashRouter>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}